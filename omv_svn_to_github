#!/bin/bash

# svn checkout with branches command
# svn checkout svn://svn.code.sf.net/p/openmediavault/code

CODE_DIR="/home/aaron/plugins/omv"
SVN_DIR="${CODE_DIR}/code"
SHAIRPORT_GIT_DIR="branches/1.x/deb/shairport/shairport/.git"

# change to code directory
cd ${SVN_DIR}

# get current revision
revision=$(svn info | grep "Revision:" | cut -f2 -d":" | tr -d " ")

# update svn repo and get new revision
svn update | grep -v ${SHAIRPORT_GIT_DIR}
newrevision=$(svn info | grep "Revision:" | cut -f2 -d":" | tr -d " ")

let counter=revision+1
let newrevision=newrevision+1

while [ ${counter} -lt ${newrevision} ]; do

  echo "Revision: ${counter}"

  # go to SVN directory and change to $counter revision
  cd ${SVN_DIR}
  svn up -r ${counter}

  # get commit message    
  msg=$(svn log --revision ${counter} | tail -2 | head -1)

  # go to CODE directory, add/remove files, and create git commit
  cd ${CODE_DIR}

  # remove .git dir from shairport
  rm -rf "${SVN_DIR}/${SHAIRPORT_GIT_DIR}"

  # add changed files to git
  echo "add files"
  git add *

  # remove deleted files
  git rm $(git ls-files --deleted)

  # create commit
  git commit -m "revision ${counter} - ${msg}"

  let counter=counter+1

done

let newrevision=newrevision-1

if [ ${revision} != ${newrevision} ]; then

  # push to github
  git push

  echo "${revision} updated to ${newrevision}"

fi

rm -rf "${SVN_DIR}/${SHAIRPORT_GIT_DIR}"
cd ${CODE_DIR}
git status
